p=ggplot(r, aes(x=response,fill=responsetype)) +
geom_histogram(position="dodge") +
scale_fill_manual(values=c("blue","red")) +
geom_vline(inherit.aes=F,data=exps,aes(xintercept=response),color="blue") +
geom_vline(inherit.aes=F,data=exps,aes(xintercept=response_unusual),color="red") +
facet_wrap(~It)
p=ggplot(r, aes(x=response,fill=responsetype)) +
geom_histogram(position="dodge") +
scale_fill_manual(values=c("blue","red")) +
geom_vline(data=exps,aes(xintercept=response),color="blue") +
geom_vline(data=exps,aes(xintercept=response_unusual),color="red") +
facet_wrap(~It)
ggsave(file="graphs/item_variability.pdf",width=20,height=15)
p=ggplot(r, aes(x=response,fill=responsetype)) +
geom_histogram(position="dodge") +
scale_fill_manual(values=c("blue","red")) +
geom_vline(data=exps,aes(xintercept=response),color="blue") +
geom_vline(data=exps,aes(xintercept=response_unusual),color="red") +
facet_wrap(data=r,~It)
ggsave(file="graphs/item_variability.pdf",width=20,height=15)
head(r)
p=ggplot(r, aes(x=response,fill=responsetype,color=responsetype)) +
geom_histogram(position="dodge") +
scale_fill_manual(values=c("blue","red")) +
geom_vline(aes(xintercept=Expectation)) +
geom_vline(aes(xintercept=Expectation_unusual)) +
facet_wrap(~It)
ggsave(file="graphs/item_variability.pdf",width=20,height=15)
p=ggplot(r, aes(x=response,fill=responsetype,color=responsetype)) +
geom_histogram(position="dodge") +
scale_fill_manual(values=c("blue","red")) +
scale_color_manual(values=c("blue","red")) +
geom_vline(aes(xintercept=Expectation)) +
geom_vline(aes(xintercept=Expectation_unusual)) +
facet_wrap(~It)
ggsave(file="graphs/item_variability.pdf",width=20,height=15)
p=ggplot(r, aes(x=response,fill=responsetype,color=responsetype)) +
geom_histogram(position="dodge") +
scale_fill_manual(values=c("blue","red")) +
scale_color_manual(values=c("blue","red")) +
geom_vline(aes(xintercept=Expectation),color="blue") +
geom_vline(aes(xintercept=Expectation_unusual),color="red") +
facet_wrap(~It)
ggsave(file="graphs/item_variability.pdf",width=20,height=15)
t = prop.table(table(r$Item,r$responsetype,r$response),mar=c(1,2))
t = as.data.frame(prop.table(table(r$Item,r$responsetype,r$response),mar=c(1,2)))
head(t)
colnames(t) = c("Item","responsetype","State","Proportion")
t[t$Item == "ate the seeds birds",]
t[t$Item == "ate the seeds birds" & t$responsetype == "response",]
t[t$Item == "ate the seeds birds" & t$responsetype == "response_unusual",]
t$Expectation = exps[as.character(t$Item),]$response
t$Expectation_unusual = exps[as.character(t$Item),]$response_unusual
t$It = factor(x=as.character(t$Item),levels=unique(t[order(t[,c("Expectation")]),]$Item))
p=ggplot(t, aes(x=State,y=Proportion,fill=responsetype,color=responsetype)) +
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values=c("blue","red")) +
scale_color_manual(values=c("blue","red")) +
geom_vline(aes(xintercept=Expectation),color="blue") +
geom_vline(aes(xintercept=Expectation_unusual),color="red") +
facet_wrap(~It)
ggsave(file="graphs/item_variability_dist.pdf",width=20,height=15)
p=ggplot(t, aes(x=State,y=Proportion,fill=responsetype,color=responsetype)) +
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values=c("blue","red")) +
scale_color_manual(values=c("blue","red")) +
geom_vline(aes(xintercept=Expectation),color="blue") +
geom_vline(aes(xintercept=Expectation_unusual),color="red") +
scale_y_continuous(limits=c(0,1)) +
facet_wrap(~It)
ggsave(file="graphs/item_variability_dist.pdf",width=20,height=15)
load("~/cogsci/projects/stanford/projects/thegricean_sinking-marbles/experiments/12_sinking-marbles-prior15/results/data/r.RData")
length(levels(r$workerid))
length(levels(as.factor(r$workerid)))
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/data/priors_original.csv")
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/data/priors_original.csv",sep="\t")
length(levels(as.factor(r$workerid)))
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/data/priors.csv",sep="\t")
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/data/priors_original.csv",sep="\t")
length(levels(as.factor(priors_original$workerid)))
head
head(priors_original)
priors_original = read.csv("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/data/priors_original.csv")
length(levels(as.factor(priors_original$workerid)))
head(priors_original)
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/priors/data/priors.txt",sep="\t")
head(priors_original)
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/priors/data/priors.txt",sep=",")
head(priors_original)
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/priors/data/priors.txt",sep=",",header=T)
head(priors_original)
length(levels(as.factor(priors_original$workerid)))
r = read.table("data/sinking_marbles.csv", sep=",", header=T)
nrow(r)
r$workerid = as.factor(as.character(r$workerid))
length(levels(r$workerid))
r$Item = as.factor(paste(r$effect,r$object))
unique(r$comments)
r = r %>% select(workerid,Item,response,response_unusual) %>%
gather(responsetype,response,response:response_unusual)
head(priors_original)
exps_original = as.data.frame(exps_original)
exps_original = priors_original %>%
group_by(Item) %>%
summarise(Expectation=mean(response))
exps_original = as.data.frame(exps_original)
summary(exps_original)
row.names(exps_original) = exps_original$Item
head(priors_original)
t = as.data.frame(prop.table(priors_original$Item,priors_original$response),mar=c(1))
t = as.data.frame(prop.table(table(priors_original$Item,priors_original$response),mar=c(1)))
head(t)
t[t$Var1=="ate the seeds birds",]
t[t$Var1=="melted ice cubes",]
colnames(t) = c("Item","State","Probability")
row.names(t) = t$Item
allprobs_original = droplevels(t[t$State == 15,])
row.names(allprobs_original) = allprobs_original$Item
nrow(allprobs_original)
head(allprobs_original)
r$OriginalExpectation = exps_original[as.character(r$Item),]$Expectation
r$OriginalAllprob = allprobs_original[as.character(r$Item),]$Probability
save(r, file="data/r.RData")
head(r)
exps = r %>%
group_by(Item, responsetype, OriginalExpectation) %>%
summarise(Expectation=mean(response))
exps = as.data.frame(exps)
head(exps)
ggplot(exps, aes(x=Expectation,y=OriginalExpectation,color=responsetype)) +
geom_point()
ggplot(exps, aes(x=Expectation,y=OriginalExpectation,color=responsetype)) +
geom_point() +
geom_smooth()
?geom_abline
ggplot(exps, aes(x=Expectation,y=OriginalExpectation,color=responsetype)) +
geom_point() +
geom_smooth() +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(exps, aes(x=Expectation,y=OriginalExpectation,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
cor(exps$Expectation,exps$OriginalExpectation)
cor(exps[exps$responsetype=="response",]$Expectation,exps[exps$responsetype=="response",]$OriginalExpectation) #.86
cor(exps[exps$responsetype=="response_unusual",]$Expectation,exps[exps$responsetype=="response_unusual",]$OriginalExpectation) #.97
ggsave("graphs/correltation_with_original_priors.pdf")
ggsave("graphs/correlation_with_original_priors.pdf")
head(r)
t = as.data.frame(prop.table(table(r$Item,r$response,r$responsetype),mar=c(1,3)))
head(t)
colnames(t) = c("Item","State","ReseponseType","Probability")
allprobs = droplevels(t[t$State == 15,])
row.names(allprobs) = allprobs$Item
allprobs$OriginalAllProb = allprobs_original[as.character(allprobs$Item),]$Probability
head(r)
t = as.data.frame(prop.table(table(r$Item,r$response,r$responsetype),mar=c(1,3)))
colnames(t) = c("Item","State","ReseponseType","Probability")
allprobs = droplevels(t[t$State == 15,])
allprobs$OriginalAllProb = allprobs_original[as.character(allprobs$Item),]$Probability
head(allprobs)
head(r)
t = as.data.frame(prop.table(table(r$Item,r$response,r$responsetype),mar=c(1,3)))
colnames(t) = c("Item","State","ReseponseType","AllProbability")
allprobs = droplevels(t[t$State == 15,])
allprobs$OriginalAllProbability = allprobs_original[as.character(allprobs$Item),]$Probability
ggplot(allprobs, aes(x=AllProbability,y=OriginalAllProbability,color=ResponseType)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(0,1)) +
geom_abline(intercept=0,slope=1,color="gray50")
head(allprobs)
t = as.data.frame(prop.table(table(r$Item,r$response,r$responsetype),mar=c(1,3)))
colnames(t) = c("Item","State","ResponseType","AllProbability")
allprobs = droplevels(t[t$State == 15,])
allprobs$OriginalAllProbability = allprobs_original[as.character(allprobs$Item),]$Probability
ggplot(allprobs, aes(x=AllProbability,y=OriginalAllProbability,color=ResponseType)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,1)) +
scale_y_continuous(limits=c(0,1)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(allprobs, aes(x=AllProbability,y=OriginalAllProbability,color=ResponseType)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,1),breaks=seq(0,1,.2)) +
scale_y_continuous(limits=c(0,1),breaks=seq(0,1,.2)) +
geom_abline(intercept=0,slope=1,color="gray50")
cor(allprobs[allprobs$ResponseType=="response",]$AllProbability,allprobs[allprobs$ResponseType=="response",]$OriginalAllProbability) #.97
cor(allprobs[allprobs$ResponseType=="response_unusual",]$AllProbability,allprobs[allprobs$ResponseType=="response_unusual",]$OriginalAllProbability) #.95
ggsave("graphs/correlation_with_original_priors_allprobs.pdf")
dist_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
modes = r %>%
group_by(Item, responsetype) %>%
summarise(Mode=dist_mode(response))
modes = as.data.frame(modes)
summary(modes)
modes_original = priors_original %>%
group_by(Item) %>%
summarise(Mode=dist_mode(response))
modes_original = as.data.frame(modes_original)
row.names(modes_original) = modes_original$Item
r$OriginalMode = modes_original[as.character(r$Item),]$Mode
modes = r %>%
group_by(Item, responsetype, OriginalMode) %>%
summarise(Mode=dist_mode(response))
modes = as.data.frame(modes)
ggplot(modes, aes(x=Mode,y=OriginalMode,color=ResponseType)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point() +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point(size=..count..) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point(aes(size=..count..)) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point(aes(size = factor(..n..))) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
stat_sum(geom="point",(aes(size = factor(..n..))) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
stat_sum(geom="point",(aes(size = factor(..n..)))) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point(stat="bin",(aes(size = ..count..))) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode)) +
geom_point(stat="bin",(aes(size = ..count..,y=OriginalMode,color=responsetype))) +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_jitter() +
#geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggsave("graphs/correlation_with_original_priors_modes.pdf")
cor(modes[modes$ResponseType=="response",]$Mode,modes[modes$ResponseType=="response",]$OriginalMode) #.95
cor(modes[modes$ResponseType=="response_unusual",]$Mode,modes[modes$ResponseType=="response_unusual",]$OriginalMode) #.81
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_jitter() +
geom_text(aes(label=Item)) +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggsave("graphs/correlation_with_original_priors_modes.pdf")
modes
ggsave("graphs/correlation_with_original_priors_modes.pdf",height=6)
ggsave("graphs/correlation_with_original_priors_modes.pdf",height=7)
ggsave("graphs/correlation_with_original_priors_modes.pdf",height=10,width=13)
ggplot(modes, aes(x=Mode,y=OriginalMode,color=responsetype)) +
geom_point() +
geom_text(aes(label=Item)) +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggsave("graphs/correlation_with_original_priors_modes.pdf",height=10,width=13)
modes[modes$Mode > 10 & modes$OriginalMode < 5,]
modes[modes$Mode > 10 & modes$OriginalMode < 5 & modes$responsetype == "response",]
modes[modes$Mode < 5 & modes$OriginalMode > 10 & modes$responsetype == "response",]
modes[modes$Mode < 5 & modes$OriginalMode > 10 & modes$responsetype == "response_unusual",]
modes[modes$Mode < 5 & modes$OriginalMode > 10 & modes$responsetype == "response",]
modes[modes$Mode > 10 & modes$OriginalMode < 5 & modes$responsetype == "response",]
setwd("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis")
# Bootstrap 95% CI for R-Squared
library(boot)
# function to obtain R-Squared from the data
rsq <- function(formula, data, indices) {
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data=d)
return(summary(fit)$r.square)
}
source("splithalf.R")
#############################################
## load in order preference data
#############################################
o = read.csv("~/Documents/git/cocolab/adjective_ordering/experiments/analysis/naturalness-duplicated.csv",header=T)
o = read.csv("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis/naturalness-duplicated.csv",header=T)
head(o)
o_agr_pred = aggregate(correctresponse~predicate*correctclass*nounclass,data=o,mean)
o_agr_class = aggregate(correctresponse~correctclass*nounclass,data=o,mean)
head(o_agr_pred)
head(o_agr_class)
#o_agr_pred = read.csv("~/Documents/git/cocolab/adjective_ordering/experiments/analysis/average-naturalness.csv",header=T)
####### adjclass by nounclass plot
o_agr_class <- bootsSummary(data=o, measurevar="correctresponse", groupvars=c("correctclass","nounclass"))
ggplot(data=o_agr_class,aes(x=reorder(correctclass,-correctresponse,mean),y=correctresponse,fill=nounclass))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=reorder(correctclass,-correctresponse,mean), width=0.1),alpha=0.5,position=position_dodge(.9))+
xlab("\nadjective class")+
ylab("naturalness rating\n(distance from noun)\n")+
ylim(0,1)+
#labs("order\npreference")+
theme_bw()#+
f = read.csv("faultless_results.csv",header=T)
head(f)
f_agr_pred = aggregate(response~predicate,data=f,mean)
f_agr_class = aggregate(response~class,data=f,mean)
####### adjclass by nounclass plot
dist_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
library(np)
setwd("~/cogsci/projects/stanford/projects/thegricean_sinking-marbles/experiments/27_sinking-marbles-prior15_unusual/results/")
r = read.table("data/sinking_marbles.csv", sep=",", header=T)
nrow(r)
r$workerid = as.factor(as.character(r$workerid))
length(levels(r$workerid))
r$Item = as.factor(paste(r$effect,r$object))
unique(r$comments)
r = r %>% select(workerid,Item,response,response_unusual) %>%
gather(responsetype,response,response:response_unusual)
# load original priors to make correlation scatterplots
priors_original = read.table("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/priors/data/priors.txt",sep=",",header=T)
length(levels(as.factor(priors_original$workerid)))
head(priors_original)
# original exps:
exps_original = priors_original %>%
group_by(Item) %>%
summarise(Expectation=mean(response))
exps_original = as.data.frame(exps_original)
row.names(exps_original) = exps_original$Item
# original allprobs:
t = as.data.frame(prop.table(table(priors_original$Item,priors_original$response),mar=c(1)))
colnames(t) = c("Item","State","Probability")
allprobs_original = droplevels(t[t$State == 15,])
row.names(allprobs_original) = allprobs_original$Item
nrow(allprobs_original)
# original modes:
modes_original = priors_original %>%
group_by(Item) %>%
summarise(Mode=dist_mode(response))
modes_original = as.data.frame(modes_original)
row.names(modes_original) = modes_original$Item
r$OriginalExpectation = exps_original[as.character(r$Item),]$Expectation
r$OriginalMode = modes_original[as.character(r$Item),]$Mode
r$OriginalAllprob = allprobs_original[as.character(r$Item),]$Probability
bimodality= read.csv("/Users/titlis/cogsci/projects/stanford/projects/thegricean_sinking-marbles/bayesian_model_comparison/priors/results/bimodalityMAPs_priorBDA-mix2binomials-fullPosterior_incrMH75000burn37500.csv")
head(bimodality)
row.names(bimodality) = bimodality$Item
head(r)
r$absMix = bimodality[as.character(r$Item),]$absMix
r$diffTheta = bimodality[as.character(r$Item),]$diffTheta
r$bimodality = bimodality[as.character(r$Item),]$bimodality
save(r, file="data/r.RData")
exps = r %>%
group_by(Item,responsetype) %>%
summarise(Expectation = mean(response))
exps = as.data.frame(exps)
exps = exps %>% spread(responsetype,Expectation)
row.names(exps) = exps$Item
r$Expectation = exps[as.character(r$Item),]$response
r$Expectation_unusual = exps[as.character(r$Item),]$response_unusual
exps = r %>%
group_by(Item,responsetype,absMix,diffTheta,bimodality) %>%
summarise(Expectation = mean(response))
exps = as.data.frame(exps)
exps = exps %>% spread(responsetype,Expectation)
row.names(exps) = exps$Item
exps = r %>%
group_by(Item, responsetype, OriginalExpectation,absMix,diffTheta,bimodality) %>%
summarise(Expectation=mean(response))
exps = as.data.frame(exps)
ggplot(exps, aes(x=Expectation,y=OriginalExpectation,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,15)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(exps, aes(x=Expectation,y=absMix,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,1)) +
geom_abline(intercept=0,slope=1,color="gray50")
ggplot(exps, aes(x=Expectation,y=absMix,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,1))
ggsave("graphs/exp_by_absmix.pdf")
ggplot(exps, aes(x=Expectation,y=diffTheta,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,1))
ggsave("graphs/exp_by_difftheta.pdf")
ggplot(exps, aes(x=Expectation,y=bimodality,color=responsetype)) +
geom_point() +
geom_smooth() +
scale_x_continuous(limits=c(0,15)) +
scale_y_continuous(limits=c(0,1))
ggsave("graphs/exp_by_bimodality.pdf")
setwd("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis")
# Bootstrap 95% CI for R-Squared
library(boot)
library(hydroGOF)
library(ggplot2)
setwd("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis")
# Bootstrap 95% CI for R-Squared
library(boot)
# function to obtain R-Squared from the data
rsq <- function(formula, data, indices) {
d <- data[indices,] # allows boot to select sample
fit <- lm(formula, data=d)
return(summary(fit)$r.square)
}
source("splithalf.R")
source("helpers.R")
o = read.csv("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis/naturalness-duplicated.csv",header=T)
head(o)
o_agr_pred = aggregate(correctresponse~predicate*correctclass*nounclass,data=o,mean)
o_agr_class = aggregate(correctresponse~correctclass*nounclass,data=o,mean)
head(o_agr_pred)
head(o_agr_class)
#o_agr_pred = read.csv("~/Documents/git/cocolab/adjective_ordering/experiments/analysis/average-naturalness.csv",header=T)
####### adjclass by nounclass plot
o_agr_class <- bootsSummary(data=o, measurevar="correctresponse", groupvars=c("correctclass","nounclass"))
ggplot(data=o_agr_class,aes(x=reorder(correctclass,-correctresponse,mean),y=correctresponse,fill=nounclass))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=reorder(correctclass,-correctresponse,mean), width=0.1),alpha=0.5,position=position_dodge(.9))+
xlab("\nadjective class")+
ylab("naturalness rating\n(distance from noun)\n")+
ylim(0,1)+
#labs("order\npreference")+
theme_bw()#+
o_agr_noun <- bootsSummary(data=o, measurevar="correctresponse", groupvars=c("correctclass","noun","nounclass"))
o_agr_pred <- bootsSummary(data=o, measurevar="correctresponse", groupvars=c("predicate","correctclass","nounclass"))
f = read.csv("faultless_results.csv",header=T)
head(f)
f_agr_pred = aggregate(response~predicate,data=f,mean)
f_agr_class = aggregate(response~class,data=f,mean)
####### adjclass by nounclass plot
f_agr_class <- bootsSummary(data=f, measurevar="response", groupvars=c("class","nounclass"))
ggplot(data=f_agr_class,aes(x=reorder(class,-response,mean),y=response,fill=nounclass))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=reorder(class,-response,mean), width=0.1),alpha=0.5,position=position_dodge(.9))+
xlab("\nadjective class")+
ylab("faultless disagreement\n")+
ylim(0,1)+
#labs("order\npreference")+
theme_bw()#+
s = read.csv("subjectivity_results.csv",header=T)
head(s)
s_agr_pred = aggregate(response~predicate,data=s,mean)
s_agr_class = aggregate(response~class,data=s,mean)
####### adjclass by nounclass plot
o = read.csv("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis/naturalness-duplicated.csv",header=T)
head(o)
o_agr_pred = aggregate(correctresponse~predicate*correctclass,data=o,mean)
o_agr_class = aggregate(correctresponse~correctclass,data=o,mean)
s = read.table("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/6-subjectivity/Submiterator-master/subjectivity-trials.tsv",sep="\t",header=T)
s_sub = read.table("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/6-subjectivity/Submiterator-master/subjectivity-subject_information.tsv",sep="\t",header=T)
sn = read.table("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/7-subjectivity-noun/Submiterator-master/subjectivity-trials.tsv",sep="\t",header=T)
sn_sub = read.table("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/7-subjectivity-noun/Submiterator-master/subjectivity-subject_information.tsv",sep="\t",header=T)
o = read.csv("~/cogsci/projects/stanford/projects/adjective_ordering/experiments/analysis/naturalness-duplicated.csv",header=T)
head(o)
f = read.csv("faultless_results.csv",header=T)
theme_set(theme_bw(18))
setwd("/Users/titlis/cogsci/projects/partitivesome/corpus/")
source("rscripts/helpers.r")
d = read.table("data/all/swbdext.tab",sep="\t",header=T,quote="")
nrow(d)
head(d)
head = d %>%
group_by(Partitive) %>%
summarise(MeanCndP=mean(CndP_Head),CiLowCndP=ci.low(CndP_Head),CiHighCndP=ci.high(CndP_Head),MeanInfo=mean(Information_Head_3gram),CiLowInfo=ci.low(Information_Head_3gram),CiHighInfo=ci.high(Information_Head_3gram))
head(head)
